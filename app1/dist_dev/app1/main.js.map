{"version":3,"sources":["./src/app/painel/frases-mock.ts","./src/environments/environment.ts","./src/app/progresso/progresso.component.ts","./src/app/progresso/progresso.component.html","./src/app/painel/painel.component.ts","./src/app/painel/painel.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/tentativas/tentativas.component.ts","./src/app/tentativas/tentativas.component.html","./src/app/shared/coracao.model.ts","./src/app/topo/topo.component.ts","./src/app/topo/topo.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Frase } from '../shared/frase.model'\r\n\r\nexport const FRASES: Frase[] = [\r\n    {fraseEng: 'I like to learn', frasePtBr: 'Eu gosto de aprender'},\r\n    {fraseEng: 'How are you?', frasePtBr: 'Como vai você?'},\r\n    {fraseEng: 'What`s your name?', frasePtBr: 'Qual o seu nome?'},\r\n    {fraseEng: 'I like', frasePtBr: 'Eu gosto'},\r\n    \r\n\r\n]","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-progresso',\n  templateUrl: './progresso.component.html',\n  styleUrls: ['./progresso.component.scss']\n})\nexport class ProgressoComponent implements OnInit {\n\n  @Input() public progresso: number = 0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"progress\">\n    <div class=\"progress-bar w-{{ progresso }}\"></div>\n</div>","import { Component, OnInit, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { Frase } from '../shared/frase.model'\nimport { FRASES } from './frases-mock'\n\n\n@Component({\n  selector: 'app-painel',\n  templateUrl: './painel.component.html',\n  styleUrls: ['./painel.component.scss']\n})\nexport class PainelComponent implements OnInit, OnDestroy {\n\n  // O output deixa este atributo exposto para o component pai pegar\n  @Output() public encerrarJogo: EventEmitter<string> = new EventEmitter()\n  \n  public frases: Frase[] = FRASES\n  public instrucao: string = 'Traduza a frase:'\n  public resposta: string = '';\n\n  // Rodadas do jogo\n  public rodada: number = 0\n  public rodadaFrase !: Frase;\n\n  // barra de progresso\n  public progresso: number = 0\n\n  public tentativas: number = 3;\n\n  constructor() {\n    this.atualizaRodada()\n    //this.rodadaFrase = this.frases[this.rodada]  \n    //console.log(this.frases)\n  }\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    console.log(\"component panel going destructed\")\n  }\n\n  // Eu quero atualizar a resposta do formulari\n  // vou criar uma funlção pra fazer o tratamento\n  // das entradas do usuário \n  public atualizaResposta(resposta: Event): void {\n    // O to-way-binding funciona assim\n    this.resposta = (<HTMLInputElement>resposta.target).value\n    console.log(resposta)\n  }\n\n  // Evento de clique do botão\n  public recuperaValorDigitado(): void {\n    \n    //console.log(this.tentativas)\n    \n    if(this.rodadaFrase.frasePtBr == this.resposta){\n      //alert(\"Tradução correta!\")\n      this.rodada++\n      // Controle da barra de progresso\n      this.progresso = this.progresso + (100 / this.frases.length)\n      //console.log(this.progresso)\n      // Atualiza a rodada de frases\n\n      //\n      if (this.rodada === 4){\n        this.encerrarJogo.emit('Vitória!')\n      }\n\n      this.atualizaRodada()\n      //this.rodadaFrase = this.frases[this.rodada]       \n      // Limpando a rodada de frases\n      //console.log(this.resposta)\n      //this.resposta = ''\n      //console.log(this.resposta)      \n    } else {\n      // diminuir a variável tentativas\n      this.tentativas--\n      \n      if(this.tentativas === -1) {\n        this.encerrarJogo.emit(\"Derrota!\")\n      }\n\n      console.log(this.tentativas)\n      \n    }\n  }\n\n  public atualizaRodada(){\n    //defini a rodada da frase com base em uma lógica\n    this.rodadaFrase = this.frases[this.rodada] \n    //Limpa a rodada\n    this.resposta = '' \n  }\n\n}\n","<div class=\"container\">\n    <div class=\"jumbotron\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <!--Controle da variavel progresso e a barra de progresso-->\n                <app-progresso [progresso]=\"progresso\"></app-progresso>\n            </div>\n            <div class=\"col-sm-6\">\n                <app-tentativas [tentativas]=\"tentativas\"></app-tentativas>\n            </div>\n        </div>   \n        <div class=\"row\">\n            <div class=\"col\">\n                <h6>{{instrucao}} </h6>\n                <p>{{rodadaFrase.fraseEng}}</p>\n                <div class=\"form-group\">\n                    <!--\n                        estamos usando o event binding e property binding\n                        (input)=\"atualizaResposta($event)\"\n                        [value]=\"resposta\"\n                    -->\n                     <textarea \n                     class=\"form-control\" \n                     rows=\"3\"\n                     (input)=\"atualizaResposta($event)\"\n                     [value]=\"resposta\"\n                     ></textarea>\n                </div>\n            </div>\n        </div> \n        <div class=\"row\">\n            <div class=\"col\">\n                <div class=\"d-flex justify-content-end\">\n                    <!--Chamando o metodo recuperaValorDigitado()-->\n                    <button \n                    type=\"button\" \n                    class=\"btn btn-primary\"\n                    (click)=\"recuperaValorDigitado()\"\n                    >Verificar</button>\n                </div>                \n            </div>\n        </div> \n        <!--<p>{{resposta}}</p>-->   \n    </div>\n</div>\n","\n<app-topo></app-topo>\n\n<div *ngIf=\"jogoEmAndamento; else fimDeJogo\">\n    <app-painel (encerrarJogo)=\"encerrarJogo($event)\"></app-painel>\n</div>\n\n<ng-template #fimDeJogo>\n    <div *ngIf=\"tipoEncerramento === 'derrota'; else fimDeJogoVitoria \" class=\"container\" style=\"margin-top: 50px\">\n        <div class=\"row\">\n            <div class=\"col-md-col\">\n                <h3 style=\"color: red\"> Finish Play, You Lose!</h3>\n                <button class=\"btn btn-primary\" (click)=\"reiniciarJogo()\">Jogar Novamente</button>\n            </div>\n        </div>\n    </div>    \n</ng-template>\n<ng-template #fimDeJogoVitoria>\n    <div class=\"container\" style=\"margin-top: 50px\">\n        <div class=\"row\">\n            <div class=\"col-md-col\">\n                <h3 style=\"color: green\"> Finish Play, You Win!</h3>\n                <button class=\"btn btn-primary\" (click)=\"reiniciarJogo()\">Jogar Novamente</button>\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  public jogoEmAndamento: boolean = true\n  public tipoEncerramento: string = ''\n \n public encerrarJogo(tipo: string): void{\n   //console.log(tipo)\n   this.jogoEmAndamento = false\n   this.tipoEncerramento = tipo\n }\n\n public reiniciarJogo(): void{\n   this.jogoEmAndamento = true\n   this.tipoEncerramento = ''\n }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TopoComponent } from './topo/topo.component';\nimport { PainelComponent } from './painel/painel.component';\nimport { TentativasComponent } from './tentativas/tentativas.component';\nimport { ProgressoComponent } from './progresso/progresso.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopoComponent,\n    PainelComponent,\n    TentativasComponent,\n    ProgressoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\nimport { Coracao } from '../shared/coracao.model'\n\n@Component({\n  selector: 'app-tentativas',\n  templateUrl: './tentativas.component.html',\n  styleUrls: ['./tentativas.component.scss']\n})\n\nexport class TentativasComponent implements OnInit, OnChanges {\n\n  @Input() public tentativas!: number;\n  // Property Binding - controlando a imagem dos corações\n  // O property bindings controla os compamentes html\n  // Aqui é o array de corações para usar no ngFor\n  public coracoes: Coracao[] = [\n    new Coracao(true), new Coracao(true), new Coracao(true)\n  ] \n\n  constructor() { \n    console.log(this.coracoes)\n    //console.log(\"tentativas recebidas do painel!\", this.tentativas)\n  }\n  // executa este method quando os valores são passados de pai \n  // filho e vice versa, quando valores são inseridos e alterados\n  // este method entra em ação\n  ngOnChanges(): void {   \n    \n    if (this.tentativas !== this.coracoes.length) {\n      let indice = this.coracoes.length - this.tentativas\n\n      // 3 - 2 = 1\n\n      this.coracoes[indice - 1].cheio = false;\n    }\n    console.log(\"tentativas recebidas do painel!\", this.tentativas)\n  }\n\n  ngOnInit(): void {\n    console.log(\"tentativas recebidas do painel!\", this.tentativas)\n  }\n\n}\n","<!-- \n<div class=\"d-flex justify-content-end\">\n<img [src]=\"coracaoVazio\"/>\n<img [src]=\"coracaoCheio\"/>\n<img [src]=\"coracaoCheio\"/>\n</div>\n-->\n\n<img *ngFor=\"let coracao of coracoes\" [src]=\"coracao.exibeCoracao()\" />","export class Coracao{\r\n    constructor(\r\n        public cheio: boolean,\r\n        public urlCoracaoCheio: string = 'assets/coracao_cheio.png', \r\n        public urlCoracaoVazio: string = 'assets/coracao_vazio.png'\r\n    ){}\r\n\r\n    public exibeCoracao(): string {\r\n        if (this.cheio){\r\n            return this.urlCoracaoCheio\r\n        }else{\r\n            return this.urlCoracaoVazio\r\n        }\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-topo',\r\n    templateUrl: './topo.component.html',\r\n    // posso passar mais de um estilo depois da vírgula\r\n    styleUrls: ['./topo.component.css']\r\n})\r\n\r\n\r\n// definindo a classes\r\nexport class TopoComponent{\r\n    // DataBindings\r\n    public titulo: string = 'String interpolation'\r\n}\r\n    \r\n\r\n\r\n","\r\n<!-- As a heading -->\r\n<nav class=\"navbar navbar-inverse bg-faded\">\r\n    <h1 class=\"navbar-brand mb-0\">{{titulo}}</h1>\r\n</nav>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}